generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model session {
  id          Int       @id @default(autoincrement())
  userId      Int       
  token       String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)

  user        user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
enum UserRoles {
  ADMIN
  MODERATOR
  VISIT
}
model user {
  id            Int         @id @default(autoincrement())
  name          String
  role          UserRoles   @default(VISIT)
  email         String      @unique
  password      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  session                   session[]
  category                  category[]
  subCategory               subCategory[]
}
model category {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  createdBy     Int  
  isActived     Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  user          user?           @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subCategory   subCategory[]

}
model subCategory {
  id            Int         @id @default(autoincrement())
  name          String
  categoryId    Int
  createdBy     Int  
  isActived     Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  user          user?       @relation(fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category      category?   @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
